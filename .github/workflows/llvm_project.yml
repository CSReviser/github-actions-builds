name: llvm_project
on: workflow_dispatch

jobs:
  llvm_clang_lld_polly-14_0_1-x86_64-msvc-release:
    runs-on: windows-2022
    env:
      LLVM_VERSION: '14.0.1'
      PYTHON_VERSION: '3.10.4'
      Z3_VERSION: '4.8.15'
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Create artifacts directory
        shell: pwsh
        run: |
          pushd .
          cd \
          $llvm_artifacts_root = mkdir llvm+clang+lld+polly-${{ env.LLVM_VERSION }}-x86_64-msvc-release
          "LLVM_ARTIFACTS_ROOT=${llvm_artifacts_root}" >> $env:GITHUB_ENV
          popd
      - name: Install zlib from vcpkg
        shell: pwsh
        run: |
          vcpkg install zlib:x64-windows-static-md
      - name: Install libxml2 from vcpkg
        shell: pwsh
        run: |
          vcpkg install libxml2:x64-windows-static-md
      - name: Download z3-solver
        shell: pwsh
        run: |
          curl -L -O 'https://github.com/Z3Prover/z3/releases/download/z3-${{ env.Z3_VERSION }}/z3-${{ env.Z3_VERSION }}-x64-win.zip'
          
          7z x z3-${{ env.Z3_VERSION }}-x64-win.zip
          rm z3-${{ env.Z3_VERSION }}-x64-win.zip
          
          "Z3_ARTIFACTS_ROOT=${PWD}\z3-${{ env.Z3_VERSION }}-x64-win" >> $env:GITHUB_ENV
      - name: Download llvm-project
        shell: pwsh
        run: |
          curl -L -O https://github.com/llvm/llvm-project/releases/download/llvmorg-${{ env.LLVM_VERSION }}/llvm-project-${{ env.LLVM_VERSION }}.src.tar.xz

          7z x llvm-project-${{ env.LLVM_VERSION }}.src.tar.xz;
          rm llvm-project-${{ env.LLVM_VERSION }}.src.tar.xz;

          7z x llvm-project-${{ env.LLVM_VERSION }}.src.tar
          rm llvm-project-${{ env.LLVM_VERSION }}.src.tar;

          ls
      - name: Build llvm+clang+lld+polly
        shell: pwsh
        run: |
          pushd .
          $env:PATH += ";${{ env.Z3_ARTIFACTS_ROOT }}\bin"
          cd llvm-project-${{ env.LLVM_VERSION }}.src
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" `
            -A x64 `
            -Thost=x64 `
            '-DCMAKE_BUILD_TYPE=Release' `
            "-DCMAKE_TOOLCHAIN_FILE=${env:VCPKG_INSTALLATION_ROOT}\scripts\buildsystems\vcpkg.cmake".Replace('\', '/') `
            '-DVCPKG_TARGET_TRIPLET=x64-windows-static-md' `
            "-DCMAKE_PREFIX_PATH=${{ env.LLVM_ARTIFACTS_ROOT }}".Replace('\', '/') `
            "-DCMAKE_INSTALL_PREFIX=${{ env.LLVM_ARTIFACTS_ROOT }}".Replace('\', '/') `
            '-DLLVM_ENABLE_PROJECTS=clang;lld;polly' `
            '-DLLVM_ENABLE_ZLIB=FORCE_ON' `
            '-DLLVM_ENABLE_LIBXML2=FORCE_ON' `
            '-DLLVM_ENABLE_Z3_SOLVER=ON' `
            "-DLLVM_Z3_INSTALL_DIR=${{ env.Z3_ARTIFACTS_ROOT }}".Replace('\', '/') `
            ..\llvm
          cmake --build . --config Release --target install
          popd
      - name: Copy libz3.dll to artifacts directory
        shell: pwsh
        run: |
          cp '${{ env.Z3_ARTIFACTS_ROOT }}\bin\libz3.dll' '${{ env.LLVM_ARTIFACTS_ROOT }}\bin'
      - name: Pack artifacts
        shell: pwsh
        # pack artifacts to preserve symbol-links
        run: |
          pushd .
          $llvm_artifacts_dirname = Split-Path '${{ env.LLVM_ARTIFACTS_ROOT }}' -Parent
          $llvm_artifacts_basename = Split-Path '${{ env.LLVM_ARTIFACTS_ROOT }}' -Leaf
          cd ${llvm_artifacts_dirname}
          tar -czvf "${llvm_artifacts_basename}.tar.gz" "${llvm_artifacts_basename}"
          popd
          mv "${llvm_artifacts_dirname}\${llvm_artifacts_basename}.tar.gz" .\
          "LLVM_ARTIFACTS_TARBALL=${llvm_artifacts_basename}.tar.gz" >> $env:GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LLVM_ARTIFACTS_TARBALL }}
          path: ${{ env.LLVM_ARTIFACTS_TARBALL }}
